// Generated by CoffeeScript 1.9.2
(function() {
  var pongular;

  pongular = require('pongular').pongular;

  require('../index');

  pongular.module('app', ['pong-base']).service('pbRoot', function($pb) {
    return $pb("https://sparks-development.firebaseio.com/");
  }).service('profile', function($model, pbRoot) {
    return $model(pbRoot.child('profile'), ['email', 'authid']);
  }).service('event', function($model, pbRoot) {
    return $model(pbRoot.child('event'), ['viewPublic']);
  }).service('eventOwner', function($model, pbRoot) {
    return $model(pbRoot.child('eventOwner'), ['event_id', 'owner_id']);
  }).service('faker', function() {
    return require('faker');
  }).value('fakePictures', ['http://worldtravelbliss.com/wp-content/uploads/2015/04/BM-2015-Carnival-of-Mirrors.jpg', 'https://pbs.twimg.com/media/BzyXBnMIQAEU9HU.jpg', 'http://boropulse.com/wp-content/uploads/2015/04/Lightning-In-a-Bottle-1.jpg', 'http://www.neontommy.com/sites/default/files/users/user620/LIB%20Woogie%20Stage.jpg', 'http://www.psybient.org/love/wp-content/uploads/Yaga-report-photo-2.jpg', 'http://www.psybient.org/love/wp-content/uploads/Yaga-report-photo-4.jpg', 'http://festivalfire.com/wp-content/uploads/2015/05/LIB2015.jpg', 'http://imgs.l4lmcdn.com/wild-woods-festival.jpg', 'http://www.neontommy.com/sites/default/files/users/user620/LIB%20Seminar.jpg', 'http://solpurpose.com/wp-content/uploads/2013/02/Itom-Neyen.jpg', 'https://www.goabase.net/pic/20140110tribalgathering_20131105034003.jpg', 'https://s-media-cache-ak0.pinimg.com/736x/8d/f6/41/8df641b1d49e6270f74493f17cb8e5a5.jpg', 'http://sensiblereason.com/wp-content/uploads/2015/03/scamp31.jpg', 'http://i.imgur.com/nUTcriDl.jpg', 'http://sensiblereason.com/wp-content/uploads/2015/03/junglejame1.jpg']).service('fixture', function(faker, pick, fakePictures) {
    return {
      profile: function() {
        return {
          nameFirst: faker.name.firstName(),
          nameLast: faker.name.lastName(),
          email: faker.internet.email()
        };
      },
      event: function() {
        return {
          name: 'Some Event',
          cardPic: pick(fakePictures)
        };
      },
      eventOwner: function(event, owner) {
        return {
          owner_id: owner.key(),
          event_id: event.key()
        };
      }
    };
  }).service('pick', function() {
    return function(arr) {
      return arr[Math.floor(Math.random() * arr.length)];
    };
  });

  pongular.injector(['app', 'pong-base']).invoke(function($watch, $q, fixture, pbRoot, profile, event, eventOwner, pick) {
    return pbRoot.remove().then(function() {
      return console.log('all data removed from firebase');
    }).then(function() {
      var j, len, m, ref, results;
      ref = [profile, event, eventOwner];
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        m = ref[j];
        results.push($watch(m));
      }
      return results;
    }).then(function() {
      var i;
      console.log('all data removed from firebase');
      return $q.all((function() {
        var j, results;
        results = [];
        for (i = j = 1; j <= 100; i = ++j) {
          results.push(profile.all().push(fixture.profile()));
        }
        return results;
      })());
    }).then(function(profiles) {
      var i;
      console.log(profiles.length + " profiles generated");
      return $q.all((function() {
        var j, results;
        results = [];
        for (i = j = 1; j <= 30; i = ++j) {
          results.push(event.all().push(fixture.event()));
        }
        return results;
      })()).then(function(events) {
        var e;
        console.log(events.length + " events generated");
        return $q.all((function() {
          var j, len, results;
          results = [];
          for (j = 0, len = events.length; j < len; j++) {
            e = events[j];
            results.push(eventOwner.all().push(fixture.eventOwner(e, pick(profiles))));
          }
          return results;
        })()).then(function(eventOwners) {
          return console.log(eventOwners.length + " owners assigned");
        });
      }).then(function() {
        return profiles[0].once().then(function(snap) {
          return snap.val().email;
        }).then(function(email) {
          console.log('looking up first profile by email', email);
          return profile.by('email', email).lookup().then(function(refs) {
            return refs[0].once();
          }).then(function(snap) {
            return console.log('profile found:', snap.val());
          });
        });
      });
    })["catch"](function(err) {
      return console.log(err);
    })["finally"](function() {
      return process.exit();
    });
  });

}).call(this);
